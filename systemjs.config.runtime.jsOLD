/*
 * This config is only used during development and build phase only
 * It will not be available on production
 *
 */

(function (global) {
    // ENV
    global.ENV = global.ENV || 'development';

    var paths = {
  //      'n:*': 'dist/*',        
    };
    // map tells the System loader where to look for things
    var map = {
        'app': 'app',
        'strategies': 'app/strategies',
        'heroes': 'app/heroes',
        'login': 'app/login',
        'shared': 'app/shared',
        'rxjs': 'node_modules/rxjs',
        '@angular': 'node_modules/@angular'
    };

    // packages tells the System loader how to load when no filename and/or no extension
    var packages = {
        'app': {
            defaultExtension: 'js',
            format: 'cjs', 
            main: 'main',
        },
        'strategies': {
            defaultExtension: 'js',
            format: 'cjs', 
            main: 'index.js'
        },
        'heroes': {
            defaultExtension: 'js',
            format: 'cjs', 
            main: 'index.js'
        },
        'login': {
            defaultExtension: 'js',
            format: 'cjs', 
            main: 'index.js'
        },
        'shared': {
            defaultExtension: 'js',
            format: 'cjs', 
            main: 'index.js'
        },
        'test': {
            defaultExtension: 'js'
        },
        'rxjs': {
            defaultExtension: 'js'
        }
    };

    // Add package entries for angular packages
    var ngPackageNames = [
        'common',
        'compiler',
        'core',
        'http',
        'platform-browser',
        'platform-browser-dynamic',
        'router',
        //'router-deprecated',
        'upgrade'
    ];

    // add package entries for packages that expose barrels using index.js
    var packageNames = [
        'lodash'
    ];

    ngPackageNames.forEach(function (pkgName) {
        //var main = global.ENV === 'testing' ? 'index.js' :
        //    pkgName + '.umd.js';
        var main = 'index.js';
        packages['@angular/' + pkgName] = { main: main, defaultExtension: 'js' };
    });

    packageNames.forEach(function (pkgName) {
        packages[pkgName] = { main: 'index.js', defaultExtension: 'js' };
    });


    var config = {
        
        map: map,
        packages: packages,
        //paths: paths,
        bundles: {
            'dist/index.js': ['app/app.component.js','app/crisis-center/crisis-detail.component.js','app/crisis-center/crisis-list.component.js','app/crisis-center/crisis.service.js','app/crisis-center/crisis-center.component.js','app/crisis-center/crisis-admin.component.js','app/crisis-center/crisis-center.routes.js','app/app.routes.js','app/main.js'],

            'dist/shared/index.js': ['app/shared/services/auth.service.js', 'app/shared/services/dialog.service.js','app/shared/services/http.service.js', 'app/shared/models/error.model.js', 'app/shared/enums/error.enum.js',
            'app/shared/enums/granularity.enum.js','app/shared/layout/error/error.component.js','app/shared/guards/can-deactivate.guard.js', 'app/shared/index.js', 'app/shared/guards/auth.guard.js'],

            'dist/dependencies.js' : ['@angular/platform-browser-dynamic','@angular/platform-browser-dynamic/index.js']
            //'dist/dependencies': ['@angular']
        }
    };

    // filterSystemConfig - index.html's chance to modify config before we register it.
    if (global.filterSystemConfig) { global.filterSystemConfig(config); }

    System.config(config);

})(this);
